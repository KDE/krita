windows-build:
  stage: build
  image: storage.kde.org/vm-images/krita-windows-clang18
  tags:
    - VM
    - amd64
  extends:
    - .ci-always-job-mixin
    - .ci-artifacts-with-packages-mixin
  variables:
    KDECI_BUILD_TYPE: Release
    KDECI_CC_CACHE: "Z:\\krita-windows\\caches"
    KDECI_CACHE_PATH: "Z:\\krita-windows\\artifacts"
    KDECI_GITLAB_SERVER: https://invent.kde.org/
    KDECI_PACKAGE_PROJECT: teams/ci-artifacts/krita-windows
    KDECI_REPO_METADATA_PATH: "$CI_PROJECT_DIR\\krita-deps-management\\repo-metadata"
    # KDECI_WORKDIR_PATH: "C:\\_" # don't use separate workdir since package script will fail!
    KDECI_COMPRESS_PACKAGES_ON_DOWNLOAD: False
    KDECI_EXTRA_CMAKE_ARGS: -DHIDE_SAFE_ASSERTS=OFF
    KRITACI_SKIP_DEBUG_PACKAGE: True
    KRITACI_BUILD_INSTALLERS: False
    KRITACI_SKIP_UPLOAD_NIGHTLY_PACKAGE: True
    KRITACI_WINDOWS_SIGN_CONFIG: upstream-ci-utilities/signing/signwindowsbinaries.ini
    KRITACI_PUBLISH_BUILD_CONFIG: upstream-ci-utilities/signing/publishbuild.ini
    PYTHONUTF8: 1
  interruptible: true
  before_script:
    - git clone https://invent.kde.org/packaging/krita-deps-management.git -b $DEPS_REPO_BRANCH_NAME_WINDOWS --depth=1
    - git clone https://invent.kde.org/packaging/krita-ci-utilities.git krita-deps-management/ci-utilities --depth=1
    - git clone https://invent.kde.org/sysadmin/ci-notary-service.git --depth=1
    - git clone https://invent.kde.org/sysadmin/ci-utilities.git upstream-ci-utilities --depth=1
    - python -m venv venv --upgrade-deps
    - . venv\Scripts\Activate.ps1
    - pip install -r krita-deps-management/requirements.txt
    - pip install -r ci-notary-service/requirements.txt
  script:
    - git config --global --add safe.directory $CI_PROJECT_DIR
    - python -u krita-deps-management/tools/replace-branch-in-seed-file.py krita-deps-management/latest/krita-deps.yml -p -o branch-corrected-deps.yml -d $DEPS_BRANCH_NAME_WINDOWS
    - python -u krita-deps-management/tools/generate-deps-file.py -s branch-corrected-deps.yml -o .kde-ci.yml
    - python -u krita-deps-management/ci-utilities/run-ci-build.py --project $CI_PROJECT_NAME --branch $CI_COMMIT_REF_NAME --platform Windows/Qt5/Shared --skip-publishing 2>&1 | Tee-Object -FilePath "build-krita.log"
    - python -u build-tools/ci-scripts/build-windows-package.py 2>&1 | Tee-Object -FilePath "build-installers.log"
    - python -u build-tools/ci-scripts/upload-nightly-packages.py --platform windows --folder $CI_PROJECT_DIR 2>&1 | Tee-Object -FilePath "installers-publish.log"
  coverage: '/^TOTAL.*\s+(\d+\%)$/'

windows-nightly:
  extends:
    - windows-build
    - .nightly-job-mixin
    - .ci-artifacts-without-packages-mixin
  interruptible: false
  variables:
    KDECI_BUILD_TYPE: RelWithDebInfo
    KDECI_ONLY_BUILD: True
    KRITACI_SKIP_DEBUG_PACKAGE: False
    KRITACI_BUILD_INSTALLERS: True
    KDECI_EXTRA_CMAKE_ARGS: >
      -DHIDE_SAFE_ASSERTS=OFF
      -DBUILD_TESTING=OFF
    KRITACI_SKIP_UPLOAD_NIGHTLY_PACKAGE: False

windows-asan-weekly:
  extends:
  - windows-build
  - .weekly-job-mixin
  - .ci-artifacts-with-packages-mixin
  interruptible: false
  variables:
    KDECI_ONLY_BUILD: "True"
    KDECI_BUILD_TYPE: RelWithDebInfo
    KRITACI_SKIP_SPLIT_DEBUG: True
    KRITACI_SKIP_DEBUG_PACKAGE: True
    KRITACI_BUILD_INSTALLERS: False
    KDECI_EXTRA_CMAKE_ARGS: >
      -DHIDE_SAFE_ASSERTS=OFF
      -DBUILD_TESTING=OFF
      -DECM_ENABLE_SANITIZERS=address
    KDECI_PACKAGE_ALIASES_YAML: '{ ext_qt : ext_qt-asan }'
    ASAN_OPTIONS: 'new_delete_type_mismatch=0:detect_leaks=0:halt_on_error=0'

windows-release:
  extends:
    - windows-build
    - .ci-release-job-mixin
  interruptible: false
  variables:
    KDECI_BUILD_TYPE: RelWithDebInfo
    KDECI_ONLY_BUILD: True
    KRITACI_SKIP_DEBUG_PACKAGE: False
    KRITACI_BUILD_INSTALLERS: True
    KRITACI_RELEASE_PACKAGE_NAMING: True
    KDECI_EXTRA_CMAKE_ARGS: >
      -DHIDE_SAFE_ASSERTS=ON
      -DBUILD_TESTING=OFF
